@page "/blog/{urlHandle}"
@model BlogApp.RazorPages.Pages.Blog.PostDetailsModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

@if (Model.BlogPost != null)
{
	ViewData["Title"] = Model.BlogPost.PageTitle;

	<div class="container pt-5">
		<div class="row justify-content-center">
			<div class="col-12 col-lg-6">
				
				<h1 class="mb-3">@Model.BlogPost.Heading</h1>
				<div class="d-flex justify-content-between">
					<span class="text-secondary">@Model.BlogPost.Author</span>
					<span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
				</div>

				<div class="mb-3">
					<span>
						@if (signInManager.IsSignedIn(User))
						{
							@if (Model.IsLiked)
							{
								<a style="cursor:pointer">
									<i class="bi bi-hand-thumbs-up-fill"></i>
								</a>
							}
							else
							{
								<a id="btnLike" style="cursor:pointer">
									<i class="bi bi-hand-thumbs-up me-1"></i>
								</a>
							}
						}

						<span id="likes">@Model.TotalLikes</span> likes
					</span>
				</div>

				<div class="mb-3">
					@if (Model.BlogPost.Tags != null)
					{
						foreach (var tag in Model.BlogPost.Tags)
						{
							<a href="/tags/@tag.Name">
								<span class="badge bg-dark">@tag.Name</span>
							</a>
						}
					}
				</div>
				<img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" />

				<div class="mb-3 blog-details">
					@Html.Raw(Model.BlogPost.Content)
				</div>

				<div class="card">
					<div class="card-header">
						<h5>Comments</h5>

						@if (signInManager.IsSignedIn(User))
						{
							<form method="post">
								<div class="mb-3">
									<label class="form-label">Comment Description</label>
									<input type="text" class="form-control" asp-for="CommentDescription" />
									<span class="text-danger" asp-validation-for="CommentDescription"></span>
								</div>
								<div class="mb-3">
									<button type="submit" class="btn btn-dark">Add Comment</button>
									<input type="hidden" asp-for="BlogPostId" />
								</div>
							</form>
						}
					</div>
					<div class="card-body">
						@if (Model.Comments != null && Model.Comments.Any())
						{
							@foreach (var comment in Model.Comments)
							{
								<div class="card mb-3">
									<div class="card-body">
										@comment.Description
									</div>
									<div class="d-flex justify-content-between">
										<span class="text-secondary">@comment.Username</span>
										<span class="text-secondary">@comment.AddedDate.ToShortDateString()</span>
									</div>
								</div>
							}
						}
						else
						{
							<p>No comments yet</p>
						}
					</div>
				</div>

			</div>
		</div>
	</div>


	@section Scripts
	{
	<script>
		const btnLike = document.getElementById('btnLike');
		const likesElement = document.getElementById('likes');

		async function getLikes() {
			fetch('/api/postlike/@Model.BlogPost.Id/totallikes', {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				}
			})

				.then(data => data.json())
				.then(result => likesElement.innerHTML = result)
		}

		async function addLike() {
			fetch('/api/postlike/add', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				},
				body: JSON.stringify({ postId: '@Model.BlogPost.Id', userId: '@userManager.GetUserId(User)' })
			})
				.then(() => {
					btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
					btnLike.removeEventListener('click', addLike);
					getLikes();
				});
		}

		btnLike.addEventListener('click', addLike);
	</script>
}
}
else
{
	<h2>Post not found!</h2>
}
